{"name": "test_login_with_valid_creds", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000104d8e934 chromedriver + 4368692\n1   chromedriver                        0x0000000104d86dc8 chromedriver + 4337096\n2   chromedriver                        0x00000001049aac04 chromedriver + 289796\n3   chromedriver                        0x00000001049ece00 chromedriver + 560640\n4   chromedriver                        0x0000000104a255ec chromedriver + 792044\n5   chromedriver                        0x00000001049e1ab4 chromedriver + 514740\n6   chromedriver                        0x00000001049e250c chromedriver + 517388\n7   chromedriver                        0x0000000104d52e50 chromedriver + 4124240\n8   chromedriver                        0x0000000104d57c40 chromedriver + 4144192\n9   chromedriver                        0x0000000104d38818 chromedriver + 4016152\n10  chromedriver                        0x0000000104d58570 chromedriver + 4146544\n11  chromedriver                        0x0000000104d2a2cc chromedriver + 3957452\n12  chromedriver                        0x0000000104d77eb8 chromedriver + 4275896\n13  chromedriver                        0x0000000104d78034 chromedriver + 4276276\n14  chromedriver                        0x0000000104d86a28 chromedriver + 4336168\n15  libsystem_pthread.dylib             0x00000001943e6f94 _pthread_start + 136\n16  libsystem_pthread.dylib             0x00000001943e1d34 thread_start + 8", "trace": "open_login_page = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7bb467ba136226a02c6187f628438cf8\")>\nget_user_name = 'daria_sbx_distributor', get_user_password = 'Iloveyou@198604'\n\n    def test_login_with_valid_creds(open_login_page, get_user_name, get_user_password):\n        LoginPage(open_login_page).do_login(get_user_name, get_user_password)\n>       ScannersPage(open_login_page).find_scanners_header_btn()\n\ntest_login_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page_objects/scanners_page.py:16: in find_scanners_header_btn\n    self._element_is_visible((By.XPATH, Locators.scanners_header_btn_xpath_locator))\n../page_objects/base_page.py:14: in _element_is_visible\n    return wait.until(ec.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7bb467ba136226a02c6187f628438cf8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x1042ab7e0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000104d8e934 chromedriver + 4368692\nE       1   chromedriver                        0x0000000104d86dc8 chromedriver + 4337096\nE       2   chromedriver                        0x00000001049aac04 chromedriver + 289796\nE       3   chromedriver                        0x00000001049ece00 chromedriver + 560640\nE       4   chromedriver                        0x0000000104a255ec chromedriver + 792044\nE       5   chromedriver                        0x00000001049e1ab4 chromedriver + 514740\nE       6   chromedriver                        0x00000001049e250c chromedriver + 517388\nE       7   chromedriver                        0x0000000104d52e50 chromedriver + 4124240\nE       8   chromedriver                        0x0000000104d57c40 chromedriver + 4144192\nE       9   chromedriver                        0x0000000104d38818 chromedriver + 4016152\nE       10  chromedriver                        0x0000000104d58570 chromedriver + 4146544\nE       11  chromedriver                        0x0000000104d2a2cc chromedriver + 3957452\nE       12  chromedriver                        0x0000000104d77eb8 chromedriver + 4275896\nE       13  chromedriver                        0x0000000104d78034 chromedriver + 4276276\nE       14  chromedriver                        0x0000000104d86a28 chromedriver + 4336168\nE       15  libsystem_pthread.dylib             0x00000001943e6f94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x00000001943e1d34 thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Step 2", "status": "passed", "parameters": [{"name": "username", "value": "'daria_sbx_distributor'"}], "start": 1713736114330, "stop": 1713736114502}, {"name": "Step 3", "status": "passed", "parameters": [{"name": "password", "value": "'Iloveyou@198604'"}], "start": 1713736114502, "stop": 1713736114565}, {"name": "Step 4", "status": "passed", "start": 1713736114565, "stop": 1713736114706}], "start": 1713736114330, "stop": 1713736124935, "uuid": "94b1b8cd-9a05-4de4-a4a2-2653a9a2bb3f", "historyId": "3ffcef2b009f6290b15c677f7beac86f", "testCaseId": "3ffcef2b009f6290b15c677f7beac86f", "fullName": "test.test_login_page#test_login_with_valid_creds", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_login_page"}, {"name": "host", "value": "dariias-mbp.home"}, {"name": "thread", "value": "92659-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_login_page"}]}