{"name": "test_add_product_with_duplicate_id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2 == 3", "trace": "products_table = <dbs.sqlite_products_table.SqliteProductsTable object at 0x102922c00>\n\n    def test_add_product_with_duplicate_id(products_table):\n        # Negative test: Attempt to add two products with the same ID\n    \n        # Get the initial count of products in the table\n        initial_product_count = len(products_table.get_all_products())\n    \n        # Attempt to add a product with a random ID\n        products_table.create_product()\n    \n        # Get the count of products in the table after the first addition attempt\n        intermediate_product_count = len(products_table.get_all_products())\n    \n        # Attempt to add another product with the same ID\n        products_table.create_product()\n    \n        # Get the count of products in the table after the second addition attempt\n        final_product_count = len(products_table.get_all_products())\n    \n        # Verify that the count of products remains unchanged\n>       assert initial_product_count == intermediate_product_count\nE       assert 2 == 3\n\ntest_get_products.py:58: AssertionError"}, "start": 1712645152374, "stop": 1712645152378, "uuid": "33b737a8-d919-4475-bdab-7a81427bee93", "historyId": "fad60bd18c5ac601052819b710a6b501", "testCaseId": "fad60bd18c5ac601052819b710a6b501", "fullName": "test.db_tests.test_get_products#test_add_product_with_duplicate_id", "labels": [{"name": "parentSuite", "value": "test.db_tests"}, {"name": "suite", "value": "test_get_products"}, {"name": "host", "value": "dariias-mbp.home"}, {"name": "thread", "value": "16662-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.db_tests.test_get_products"}]}