{"name": "test_update_product_category_id", "status": "broken", "statusDetails": {"message": "sqlite3.OperationalError: near \"2\": syntax error", "trace": "products_table = <dbs.sqlite_products_table.SqliteProductsTable object at 0x1024230b0>\n\n    def test_update_product_category_id(products_table):\n        # Negative test: Attempt to update a non-existent product's category ID\n        non_existent_product_id = 98888\n>       result = products_table.update_product_category_id(2, non_existent_product_id)\n\ntest_get_products.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<dbs.sqlite_products_table.SqliteProductsTable object at 0x1024230b0>, 2, 98888)\nkwargs = {}, cursor = <sqlite3.Cursor object at 0x1031895c0>\n\n    def wrapper(*args, **kwargs):\n        with SqliteConnector() as cursor:\n>           return cursor.execute(fn(*args, **kwargs)).fetchall()\nE           sqlite3.OperationalError: near \"2\": syntax error\n\n../../dbs/db_base/base_sqlite_table.py:8: OperationalError"}, "start": 1712611031080, "stop": 1712611031082, "uuid": "74e16f7c-f8d3-43d4-be52-1e6f91a0edac", "historyId": "a7cc50838eda56c8a943d0b981bde37d", "testCaseId": "a7cc50838eda56c8a943d0b981bde37d", "fullName": "test.db_tests.test_get_products#test_update_product_category_id", "labels": [{"name": "parentSuite", "value": "test.db_tests"}, {"name": "suite", "value": "test_get_products"}, {"name": "host", "value": "dariias-mbp.home"}, {"name": "thread", "value": "14843-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.db_tests.test_get_products"}]}