{"name": "test_add_product_with_duplicated_id", "status": "broken", "statusDetails": {"message": "sqlite3.IntegrityError: UNIQUE constraint failed: Products.product_id", "trace": "products_table = <dbs.sqlite_products_table.SqliteProductsTable object at 0x10107e300>\n\n    def test_add_product_with_duplicated_id(products_table):\n        # Negative test: Attempt to add two products with the same ID\n        product_count = len(products_table.get_all_products())\n>       products_table.create_product()\n\ntest_get_products.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<dbs.sqlite_products_table.SqliteProductsTable object at 0x10107e300>,)\nkwargs = {}, cursor = <sqlite3.Cursor object at 0x102d90f40>\n\n    def wrapper(*args, **kwargs):\n        with SqliteConnector() as cursor:\n>           return cursor.execute(fn(*args, **kwargs)).fetchall()\nE           sqlite3.IntegrityError: UNIQUE constraint failed: Products.product_id\n\n../../dbs/db_base/base_sqlite_table.py:8: IntegrityError"}, "start": 1712645530698, "stop": 1712645530701, "uuid": "0eebfe79-86e5-4d6a-8c21-b72b1788be93", "historyId": "efc3fad8f23c669c66c8d3fd2968e14a", "testCaseId": "efc3fad8f23c669c66c8d3fd2968e14a", "fullName": "test.db_tests.test_get_products#test_add_product_with_duplicated_id", "labels": [{"name": "parentSuite", "value": "test.db_tests"}, {"name": "suite", "value": "test_get_products"}, {"name": "host", "value": "dariias-mbp.home"}, {"name": "thread", "value": "17130-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.db_tests.test_get_products"}]}